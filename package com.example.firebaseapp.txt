package com.example.firebaseapp
import android.os.Bundle
import android.widget.*
import androidx.appcompat.app.AppCompatActivity
import com.google.firebase.database.DataSnapshot
import com.google.firebase.database.DatabaseError
import com.google.firebase.database.DatabaseReference
import com.google.firebase.database.FirebaseDatabase
import com.google.firebase.database.ValueEventListener
class MainActivity : AppCompatActivity() {
    private lateinit var database: DatabaseReference
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        // Initialize Firebase Database reference
        database = FirebaseDatabase.getInstance().reference
        // References to UI elements
        val studentIdEditText = findViewById<EditText>(R.id.studentIdEditText)
        val studentNameEditText = findViewById<EditText>(R.id.studentNameEditText)
        val studentMarksEditText = findViewById<EditText>(R.id.studentMarksEditText)
        val saveButton = findViewById<Button>(R.id.saveButton)
        val searchButton = findViewById<Button>(R.id.searchButton)
        val resultTextView = findViewById<TextView>(R.id.resultTextView)
        // Handle save button click
        saveButton.setOnClickListener {
            val id = studentIdEditText.text.toString()
            val name = studentNameEditText.text.toString()
            val marks = studentMarksEditText.text.toString().toIntOrNull()
            if (id.isNotEmpty() && name.isNotEmpty() && marks != null) {
                saveStudent(id, name, marks)
                Toast.makeText(this, "Student saved", Toast.LENGTH_SHORT).show()
            } else {
                Toast.makeText(this, "Please fill all fields", Toast.LENGTH_SHORT).show()
            }
        }
        // Handle search button click
        searchButton.setOnClickListener {
            val id = studentIdEditText.text.toString()
            if (id.isNotEmpty()) {
                searchStudent(id, resultTextView)
            } else {
                Toast.makeText(this, "Please enter a valid ID", Toast.LENGTH_SHORT).show()
            }
        }
    }
    // Function to save student to Firebase
    private fun saveStudent(id: String, name: String, marks: Int) {
        val student = Student(name, marks)
        database.child("students").child(id).setValue(student)
    }
    // Function to search student by ID in Firebase
    private fun searchStudent(id: String, resultTextView: TextView) {
        database.child("students").child(id).addListenerForSingleValueEvent(object : ValueEventListener {
            override fun onDataChange(dataSnapshot: DataSnapshot) {
                if (dataSnapshot.exists()) {
                    val student = dataSnapshot.getValue(Student::class.java)
                    resultTextView.text = "ID: $id\nName: ${student?.name}\nMarks: ${student?.marks}"
                } else {
                    resultTextView.text = "Student not found"
                }
            }
            override fun onCancelled(databaseError: DatabaseError) {
                resultTextView.text = "Error retrieving data"
            }
        })
    }
}
// Data class for Student
data class Student(val name: String = "", val marks: Int = 0)


>>>>>>>>>>>>>>>>>>>>>>>>>>


<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp">
    <!-- Input for Student ID -->
    <EditText
        android:id="@+id/studentIdEditText"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Enter Student ID"
        android:inputType="number"
        android:layout_marginBottom="16dp"/>
    <!-- Input for Student Name -->
    <EditText
        android:id="@+id/studentNameEditText"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Enter Student Name"
        android:layout_marginBottom="16dp"/>
    <!-- Input for Marks -->
    <EditText
        android:id="@+id/studentMarksEditText"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Enter Marks"
        android:inputType="number"
        android:layout_marginBottom="16dp"/>
    <!-- Button to Save Data -->
    <Button
        android:id="@+id/saveButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Save"
        android:layout_marginBottom="16dp"/>
    <!-- Button to Search Data -->
    <Button
        android:id="@+id/searchButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Search by ID"
        android:layout_marginBottom="16dp"/>
    <!-- TextView to Display the Result -->
    <TextView
        android:id="@+id/resultTextView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text=""
        android:textSize="18sp"/>
</LinearLayout>


>>>>>>>>>>>>>>>>>>>>>>>>>

// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
    alias(libs.plugins.androidApplication) apply false
    alias(libs.plugins.jetbrainsKotlinAndroid) apply false
    id("com.google.gms.google-services") version "4.4.2" apply false

}



>>>>>>>>>>>>

plugins {
    alias(libs.plugins.androidApplication)
    alias(libs.plugins.jetbrainsKotlinAndroid)
    id("com.google.gms.google-services")
}

android {
    namespace = "com.example.firebaseapp"
    compileSdk = 34

    defaultConfig {
        applicationId = "com.example.firebaseapp"
        minSdk = 24
        targetSdk = 34
        versionCode = 1
        versionName = "1.0"

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            isMinifyEnabled = false
            proguardFiles(
                getDefaultProguardFile("proguard-android-optimize.txt"),
                "proguard-rules.pro"
            )
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {

    implementation(libs.androidx.core.ktx)
    implementation(libs.androidx.appcompat)
    implementation(libs.material)
    implementation(libs.androidx.activity)
    implementation(libs.androidx.constraintlayout)
    implementation(libs.firebase.database.ktx)
    testImplementation(libs.junit)
    androidTestImplementation(libs.androidx.junit)
    androidTestImplementation(libs.androidx.espresso.core)
    implementation(platform("com.google.firebase:firebase-bom:33.3.0"))
}